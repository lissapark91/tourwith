package tk.tourwith.project.crew.room.chtt.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ChttManageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public ChttManageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSjIsNull() {
            addCriterion("CHTT_NO is null");
            return (Criteria) this;
        }

        public Criteria andSjIsNotNull() {
            addCriterion("CHTT_NO is not null");
            return (Criteria) this;
        }

        public Criteria andSjEqualTo(String value) {
            addCriterion("CHTT_NO =", value, "sj");
            return (Criteria) this;
        }

        public Criteria andSjNotEqualTo(String value) {
            addCriterion("CHTT_NO <>", value, "sj");
            return (Criteria) this;
        }

        public Criteria andSjGreaterThan(String value) {
            addCriterion("CHTT_NO >", value, "sj");
            return (Criteria) this;
        }

        public Criteria andSjGreaterThanOrEqualTo(String value) {
            addCriterion("CHTT_NO >=", value, "sj");
            return (Criteria) this;
        }

        public Criteria andSjLessThan(String value) {
            addCriterion("CHTT_NO <", value, "sj");
            return (Criteria) this;
        }

        public Criteria andSjLessThanOrEqualTo(String value) {
            addCriterion("CHTT_NO <=", value, "sj");
            return (Criteria) this;
        }

        public Criteria andSjLike(String value) {
            addCriterion("CHTT_NO like", value, "sj");
            return (Criteria) this;
        }

        public Criteria andSjNotLike(String value) {
            addCriterion("CHTT_NO not like", value, "sj");
            return (Criteria) this;
        }

        public Criteria andSjIn(List<String> values) {
            addCriterion("CHTT_NO in", values, "sj");
            return (Criteria) this;
        }

        public Criteria andSjNotIn(List<String> values) {
            addCriterion("CHTT_NO not in", values, "sj");
            return (Criteria) this;
        }

        public Criteria andSjBetween(String value1, String value2) {
            addCriterion("CHTT_NO between", value1, value2, "sj");
            return (Criteria) this;
        }

        public Criteria andSjNotBetween(String value1, String value2) {
            addCriterion("CHTT_NO not between", value1, value2, "sj");
            return (Criteria) this;
        }

        public Criteria andConIsNull() {
            addCriterion("REG_DE is null");
            return (Criteria) this;
        }

        public Criteria andConIsNotNull() {
            addCriterion("REG_DE is not null");
            return (Criteria) this;
        }

        public Criteria andConEqualTo(Date value) {
            addCriterion("REG_DE =", value, "con");
            return (Criteria) this;
        }

        public Criteria andConNotEqualTo(Date value) {
            addCriterion("REG_DE <>", value, "con");
            return (Criteria) this;
        }

        public Criteria andConGreaterThan(Date value) {
            addCriterion("REG_DE >", value, "con");
            return (Criteria) this;
        }

        public Criteria andConGreaterThanOrEqualTo(Date value) {
            addCriterion("REG_DE >=", value, "con");
            return (Criteria) this;
        }

        public Criteria andConLessThan(Date value) {
            addCriterion("REG_DE <", value, "con");
            return (Criteria) this;
        }

        public Criteria andConLessThanOrEqualTo(Date value) {
            addCriterion("REG_DE <=", value, "con");
            return (Criteria) this;
        }

        public Criteria andConIn(List<Date> values) {
            addCriterion("REG_DE in", values, "con");
            return (Criteria) this;
        }

        public Criteria andConNotIn(List<Date> values) {
            addCriterion("REG_DE not in", values, "con");
            return (Criteria) this;
        }

        public Criteria andConBetween(Date value1, Date value2) {
            addCriterion("REG_DE between", value1, value2, "con");
            return (Criteria) this;
        }

        public Criteria andConNotBetween(Date value1, Date value2) {
            addCriterion("REG_DE not between", value1, value2, "con");
            return (Criteria) this;
        }

        public Criteria andReg_deIsNull() {
            addCriterion("CR_NO is null");
            return (Criteria) this;
        }

        public Criteria andReg_deIsNotNull() {
            addCriterion("CR_NO is not null");
            return (Criteria) this;
        }

        public Criteria andReg_deEqualTo(String value) {
            addCriterion("CR_NO =", value, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deNotEqualTo(String value) {
            addCriterion("CR_NO <>", value, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deGreaterThan(String value) {
            addCriterion("CR_NO >", value, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deGreaterThanOrEqualTo(String value) {
            addCriterion("CR_NO >=", value, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deLessThan(String value) {
            addCriterion("CR_NO <", value, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deLessThanOrEqualTo(String value) {
            addCriterion("CR_NO <=", value, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deLike(String value) {
            addCriterion("CR_NO like", value, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deNotLike(String value) {
            addCriterion("CR_NO not like", value, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deIn(List<String> values) {
            addCriterion("CR_NO in", values, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deNotIn(List<String> values) {
            addCriterion("CR_NO not in", values, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deBetween(String value1, String value2) {
            addCriterion("CR_NO between", value1, value2, "reg_de");
            return (Criteria) this;
        }

        public Criteria andReg_deNotBetween(String value1, String value2) {
            addCriterion("CR_NO not between", value1, value2, "reg_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deIsNull() {
            addCriterion("DSPTCHMAN_NO is null");
            return (Criteria) this;
        }

        public Criteria andUpd_deIsNotNull() {
            addCriterion("DSPTCHMAN_NO is not null");
            return (Criteria) this;
        }

        public Criteria andUpd_deEqualTo(String value) {
            addCriterion("DSPTCHMAN_NO =", value, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deNotEqualTo(String value) {
            addCriterion("DSPTCHMAN_NO <>", value, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deGreaterThan(String value) {
            addCriterion("DSPTCHMAN_NO >", value, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deGreaterThanOrEqualTo(String value) {
            addCriterion("DSPTCHMAN_NO >=", value, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deLessThan(String value) {
            addCriterion("DSPTCHMAN_NO <", value, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deLessThanOrEqualTo(String value) {
            addCriterion("DSPTCHMAN_NO <=", value, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deLike(String value) {
            addCriterion("DSPTCHMAN_NO like", value, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deNotLike(String value) {
            addCriterion("DSPTCHMAN_NO not like", value, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deIn(List<String> values) {
            addCriterion("DSPTCHMAN_NO in", values, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deNotIn(List<String> values) {
            addCriterion("DSPTCHMAN_NO not in", values, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deBetween(String value1, String value2) {
            addCriterion("DSPTCHMAN_NO between", value1, value2, "upd_de");
            return (Criteria) this;
        }

        public Criteria andUpd_deNotBetween(String value1, String value2) {
            addCriterion("DSPTCHMAN_NO not between", value1, value2, "upd_de");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated do_not_delete_during_merge Sat Feb 10 14:10:51 KST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CHTT_MANAGE
     *
     * @mbg.generated Sat Feb 10 14:10:51 KST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}